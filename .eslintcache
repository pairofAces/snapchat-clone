[{"/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/index.js":"1","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/App.js":"2","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/serviceWorker.js":"3","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/app/store.js":"4","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/features/appSlice.js":"5","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/features/cameraSlice.js":"6","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/components/Preview/Preview.js":"7","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/components/WebcamCapture/WebcamCapture.js":"8","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/firebase.js":"9","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/components/Chats/Chats.js":"10","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/components/Chat/Chat.js":"11","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/components/ChatView/ChatView.js":"12"},{"size":644,"mtime":1611979069441,"results":"13","hashOfConfig":"14"},{"size":1180,"mtime":1612745048732,"results":"15","hashOfConfig":"14"},{"size":5141,"mtime":1611979069442,"results":"16","hashOfConfig":"14"},{"size":265,"mtime":1612239146365,"results":"17","hashOfConfig":"14"},{"size":798,"mtime":1612745048735,"results":"18","hashOfConfig":"14"},{"size":522,"mtime":1612239146367,"results":"19","hashOfConfig":"14"},{"size":2730,"mtime":1612745048734,"results":"20","hashOfConfig":"14"},{"size":1562,"mtime":1612745048735,"results":"21","hashOfConfig":"14"},{"size":1016,"mtime":1612671833179,"results":"22","hashOfConfig":"14"},{"size":1822,"mtime":1612745048734,"results":"23","hashOfConfig":"14"},{"size":1260,"mtime":1612745048733,"results":"24","hashOfConfig":"14"},{"size":700,"mtime":1612745048734,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"2iw3sn",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/index.js",[],["54","55"],"/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/App.js",[],"/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/serviceWorker.js",[],"/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/app/store.js",[],"/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/features/appSlice.js",[],"/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/features/cameraSlice.js",[],"/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/components/Preview/Preview.js",["56"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { resetCameraImage, selectCameraImage } from '../../features/cameraSlice';\nimport './Preview.css';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport CreateIcon from '@material-ui/icons/Create';\nimport NoteIcon from '@material-ui/icons/Note';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CropIcon from '@material-ui/icons/Crop';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport SendIcon from '@material-ui/icons/Send';\nimport { v4 as uuid } from 'uuid';\nimport { db, storage } from '../../firebase';\nimport firebase from 'firebase';\n\nfunction Preview() {\n    const cameraImage = useSelector(selectCameraImage);\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!cameraImage) {\n            history.replace('/')\n        }\n    }, [cameraImage, history])\n\n    const closePreview = () => {\n        dispatch(resetCameraImage());\n    }\n\n    const sendPost = () => {\n        const id = uuid();\n        const uploadTask = storage.ref(`posts/${id}`).putString(cameraImage, 'data_url');\n        uploadTask.on('state_changed', \n            null, \n            (error) => {\n                console.log(error);\n            },\n            () => {\n                storage.ref('posts')\n                .child(id)\n                .getDownloadURL()\n                .then((url) => {\n                    db.collection('posts').add({\n                        imageURl: url,\n                        username: 'Karan',\n                        read: false,\n                        //ProfilePic,\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                    });\n                    history.replace('/chats');\n                });\n            }\n        );\n    };\n\n    return(\n        <div className='preview'>\n            <CloseIcon onClick={closePreview} className='preview__close' />\n            <div className='preview__toolbarRight'>\n                <TextFieldsIcon />\n                <CreateIcon />\n                <NoteIcon />\n                <MusicNoteIcon />\n                <AttachFileIcon />\n                <CropIcon />\n                <TimerIcon />\n            </div>\n            <img src={cameraImage}/>\n            <div  onClick={sendPost} className='preview__footer'>\n                <p>Send Now</p>\n                <SendIcon fontSize='small' className='preview__sendIcon' />\n            </div>\n        </div>\n    )\n}\n\nexport default Preview\n","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/components/WebcamCapture/WebcamCapture.js",["57","58"],"import React, { useCallback, useState, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { useDispatch } from 'react-redux';\nimport { setCameraImage } from '../../features/cameraSlice';\nimport { useHistory } from 'react-router-dom';\nimport './WebcamCapture.css';\n\n// create video constraints to set the size of the camera video\nconst videoConstraints = {\n    width: 250,\n    height: 400,\n    facingMode: \"user\",\n}\n\n\nfunction WebcamCapture() {\n    // create a reference point for the webcam\n    const webcamRef = useRef(null);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    // const [image, setImage] = useState(null);\n\n    // create the onClick function or RadioButton\n    const capture = useCallback(() => {\n        const imageSrc = webcamRef.current.getScreenshot();\n        dispatch(setCameraImage(imageSrc));\n        history.push('./preview');\n    }, [webcamRef])\n\n    return (\n        <div className=\"webcamCapture\">\n            <Webcam \n                audio={false}\n                height={videoConstraints.height}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                width={videoConstraints.width}\n                videoConstraints={videoConstraints}\n            />\n\n            <RadioButtonUncheckedIcon \n                className=\"webcamCapture__button\"\n                onClick={capture}\n                fontSize=\"large\"\n            />\n        </div>\n    )\n}\n\nexport default WebcamCapture;\n","/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/firebase.js",[],"/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/components/Chats/Chats.js",[],"/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/components/Chat/Chat.js",[],"/Users/karanchauhan/Development/Personal Projects/SnapChat-Clone/snapchat-clone/src/components/ChatView/ChatView.js",["59"],"import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { selectSelectedImage } from '../../features/appSlice';\nimport './ChatView.css';\n\nfunction ChatView() {\n    const selectedImage = useSelector(selectSelectedImage);\n    const history = useHistory();\n\n    console.log(selectedImage)\n    useEffect(() => {\n        if (!selectedImage) {\n            exit();\n        }\n    }, [selectedImage])\n\n    const exit = () => {\n        history.replace('/chats')\n    };\n\n    return (\n        <div className=\"chatView\">\n            <img src={selectedImage} onClick={exit} alt=\"\"/>\n        </div>\n    )\n}\n\nexport default ChatView\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":72,"column":13,"nodeType":"66","endLine":72,"endColumn":37},{"ruleId":"67","severity":1,"message":"68","line":1,"column":30,"nodeType":"69","messageId":"70","endLine":1,"endColumn":38},{"ruleId":"71","severity":1,"message":"72","line":29,"column":8,"nodeType":"73","endLine":29,"endColumn":19,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":16,"column":8,"nodeType":"73","endLine":16,"endColumn":23,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["79"],"React Hook useEffect has a missing dependency: 'exit'. Either include it or remove the dependency array.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [dispatch, history]",{"range":"85","text":"86"},"Update the dependencies array to be: [exit, selectedImage]",{"range":"87","text":"88"},[977,988],"[dispatch, history]",[458,473],"[exit, selectedImage]"]